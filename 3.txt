 import pandas as pd
 import numpy as np
 from sklearn.datasets import load_iris
 from sklearn.tree import DecisionTreeClassifier, export_text, plot_tree
 from sklearn.model_selection import train_test_split
 from sklearn.metrics import accuracy_score
 import matplotlib.pyplot as plt
 # Load the Iris dataset
 iris = load_iris()
 df = pd.DataFrame(iris.data, columns=iris.feature_names)
 df['target'] = iris.target
 # Split the dataset into training and test sets
 X_train, X_test, y_train, y_test = train_test_split(df[iris.feature_names], df['target'], te
 # Train the decision tree using the ID3 algorithm
 model = DecisionTreeClassifier()
 model.fit(X_train, y_train)
 # Display the decision tree structure
 print("Decision Tree Rules:\n")
 tree_rules = export_text(model, feature_names=iris.feature_names)
 print(tree_rules)
 # Visualize the decision tree
 plt.figure(figsize=(12, 8))
 plot_tree(model, feature_names=iris.feature_names, class_names=iris.target_names, filled=Tr
 plt.title('Decision Tree (ID3)')
 plt.show()
 # Evaluate the model
 predictions = model.predict(X_test)
 accuracy = accuracy_score(y_test, predictions)
 print(f"Accuracy: {accuracy * 100:.2f}%")
 # Classify a new sample
 new_sample = pd.DataFrame([[5.1, 3.5, 1.4, 0.2]], columns=iris.feature_names)  # Example va
 prediction = model.predict(new_sample)
 print(f"New Sample Classification: {iris.target_names[prediction][0]}")
